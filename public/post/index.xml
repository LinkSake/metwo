<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>posts on luis angel ortega</title>
    <link>http://localhost:1313/post/</link>
    <description>Recent  Posts on luis angel ortega</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <managingEditor>hey@luisangel.me (Luis Angel Ortega)</managingEditor>
    <webMaster>hey@luisangel.me (Luis Angel Ortega)</webMaster>
    <copyright>2024 Luis Angel Ortega Holguin All rights reserved</copyright>
    <lastBuildDate>Sat, 05 Nov 2022 11:53:11 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dropdowns and Toggles with Pure CSS</title>
      <link>http://localhost:1313/post/2022/11/05/dropdowns-y-toggles-con-css/</link>
      <pubDate>Sat, 05 Nov 2022 11:53:11 -0500</pubDate><author>hey@luisangel.me (Luis Angel Ortega)</author>
      <guid>http://localhost:1313/post/2022/11/05/dropdowns-y-toggles-con-css/</guid>
      <description>&lt;p&gt;We could imagine the technologies of the platform on which I work, &lt;a href=&#34;https://www.joinbuildit.com/&#34;&gt;Build It&lt;/a&gt;, as a dish; where Ruby on Rails is our main dish but is accompanied by a good portion of JavaScript through &lt;a href=&#34;https://stimulus.hotwired.dev/&#34;&gt;Stimulus JS&lt;/a&gt;, and while this brings the functionality and that magical feeling of a single page application (SPA), there are things we want to keep simple instead of using a sledgehammer to kill an ant, as a university professor used to say. Therefore, we decided to take a page from &lt;a href=&#34;https://apple.com/mx&#34;&gt;Apple&lt;/a&gt; when handling dropdown menus or dropdowns and do it through pure CSS and HTML; without requiring a line of JavaScript.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-pillars&#34;&gt;The Pillars&lt;/h2&gt;&#xA;&lt;p&gt;Our two pillars in the view will be &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements of checkbox type and &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tags. We will form our basic skeleton as follows:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#8caaee&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;toggle&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#8caaee&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;checkbox&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#ca9ee6&#34;&gt;input&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;label&lt;/span&gt; &lt;span style=&#34;color:#8caaee&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;toggle&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#ca9ee6&#34;&gt;label&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We will be using the checked property of checkbox-type inputs to control the content we show and when we show it. For this, we will be relying on the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element since by linking it through its &lt;code&gt;for&lt;/code&gt; property it will also be affected by the class change when the checked property of our checkbox is present.&lt;/p&gt;&#xA;&lt;p&gt;All our code will really be inside &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; in two sections: container and toggle as shown below.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#8caaee&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;toggle&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#8caaee&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;checkbox&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#ca9ee6&#34;&gt;input&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;label&lt;/span&gt; &lt;span style=&#34;color:#8caaee&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;toggle&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#8caaee&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;toggle&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;&amp;lt;!-- The element with which the user will interact --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/&lt;span style=&#34;color:#ca9ee6&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#8caaee&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6d189&#34;&gt;&amp;#34;container&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;&amp;lt;!-- What we want to show--&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/&lt;span style=&#34;color:#ca9ee6&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#ca9ee6&#34;&gt;label&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;the-magic&#34;&gt;The Magic&lt;/h2&gt;&#xA;&lt;p&gt;Now that we have our HTML skeleton ready, it&amp;rsquo;s time to add the CSS that will give our component the magical touch:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#&lt;span style=&#34;color:#ef9f76&#34;&gt;toggle&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ca9ee6&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#ef9f76&#34;&gt;none&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&lt;span style=&#34;color:#e5c890&#34;&gt;container&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ca9ee6&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#ef9f76&#34;&gt;none&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#&lt;span style=&#34;color:#ef9f76&#34;&gt;toggle&lt;/span&gt;:&lt;span style=&#34;color:#8caaee;font-weight:bold&#34;&gt;checked&lt;/span&gt; &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ca9ee6&#34;&gt;label&lt;/span&gt; .&lt;span style=&#34;color:#e5c890&#34;&gt;container&lt;/span&gt; { &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ca9ee6&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#ef9f76&#34;&gt;inherit&lt;/span&gt;; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Our input with the toggle id will never be shown so that we do not have the checkbox present on our page, what we will show and with which the user interacts is what is inside our div with toggle class. Once they click on our toggle, the input will have the value of checked and with &lt;code&gt;#toggle:checked+label&lt;/code&gt; we affect the style of our &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; to obtain a result like the following&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;Demo 1&#34; src=&#34;http://localhost:1313/images/post/dropdowns-toggle-css-1.gif&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And with a little more style (courtesy of Thulio Philipe) we can have results like this&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;Demo 2&#34; src=&#34;http://localhost:1313/images/post/dropdowns-toggle-css-2.gif&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Or as the examples we have inside Build It&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;Demo 3&#34; src=&#34;http://localhost:1313/images/post/dropdowns-toggle-css-3.gif&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;A small popover that is always present, giving vital information to the user&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;Demo 4&#34; src=&#34;http://localhost:1313/images/post/dropdowns-toggle-css-4.gif&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Or a filter menu that can be shown easily.&lt;/p&gt;&#xA;&lt;p&gt;As we can see, modern CSS allows us to make interactive pages without the need for a script for it; giving us a new solution to a problem with endless ways to solve it, so it will be necessary to consider the needs of the project and what is most suitable.&lt;/p&gt;&#xA;&lt;p&gt;Finally, I leave you &lt;a href=&#34;https://github.com/LinkSake/toggle-dropdown-css&#34;&gt;a repository&lt;/a&gt; with a couple of examples seen in this article for future reference and I invite you to visit &lt;a href=&#34;https://www.joinbuildit.com/early_access/client&#34;&gt;the platform&lt;/a&gt; and especially &lt;a href=&#34;https://www.joinbuildit.com/u/luis-ortega-160&#34;&gt;my profile&lt;/a&gt;, where we can connect for future projects.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Markdown Guide (modified)</title>
      <link>http://localhost:1313/post/2018/08/30/markdown-guide-modified/</link>
      <pubDate>Thu, 30 Aug 2018 00:00:00 +0000</pubDate><author>hey@luisangel.me (Luis Angel Ortega)</author>
      <guid>http://localhost:1313/post/2018/08/30/markdown-guide-modified/</guid>
      <description>&lt;h1 id=&#34;an-h1-header&#34;&gt;An h1 header&lt;/h1&gt;&#xA;&lt;p&gt;Paragraphs are separated by a blank line.&lt;/p&gt;&#xA;&lt;p&gt;2nd paragraph. &lt;em&gt;Italic&lt;/em&gt;, &lt;strong&gt;bold&lt;/strong&gt;, and &lt;code&gt;monospace&lt;/code&gt;. Itemized lists&#xA;look like:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;this one&lt;/li&gt;&#xA;&lt;li&gt;that one&lt;/li&gt;&#xA;&lt;li&gt;the other one&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Note that &amp;mdash; not considering the asterisk &amp;mdash; the actual text&#xA;content starts at 4-columns in.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Block quotes are&#xA;written like so.&lt;/p&gt;&#xA;&lt;p&gt;They can span multiple paragraphs,&#xA;if you like.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., &amp;ldquo;it&amp;rsquo;s all&#xA;in chapters 12&amp;ndash;14&amp;rdquo;). Three dots &amp;hellip; will be converted to an ellipsis.&#xA;Unicode is supported. ☺&lt;/p&gt;&#xA;&lt;h2 id=&#34;an-h2-header&#34;&gt;An h2 header&lt;/h2&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s a numbered list:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;first item&lt;/li&gt;&#xA;&lt;li&gt;second item&lt;/li&gt;&#xA;&lt;li&gt;third item&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Note again how the actual text starts at 4 columns in (4 characters&#xA;from the left side). Here&amp;rsquo;s a code sample:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# Let me re-iterate ...&#xA;for i in 1 .. 10 { do-something(i) }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;As you probably guessed, indented 4 spaces. By the way, instead of&#xA;indenting the block, you can use delimited blocks, if you like:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;define foobar() {&#xA;    print &amp;#34;Welcome to flavor country!&amp;#34;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(which makes copying &amp;amp; pasting easier). You can optionally mark the&#xA;delimited block for Pandoc to syntax highlight it:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81c8be&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#ef9f76&#34;&gt;time&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;# Quick, count to ten!&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#99d1db&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#ef9f76&#34;&gt;10&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;# (but not *too* quick)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    time&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ef9f76&#34;&gt;0.5&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#99d1db&#34;&gt;print&lt;/span&gt; i&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;an-h3-header&#34;&gt;An h3 header&lt;/h3&gt;&#xA;&lt;p&gt;Now a nested list:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;First, get these ingredients:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;carrots&lt;/li&gt;&#xA;&lt;li&gt;celery&lt;/li&gt;&#xA;&lt;li&gt;lentils&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Boil some water.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Dump everything in the pot and follow&#xA;this algorithm:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;find wooden spoon&#xA;uncover pot&#xA;stir&#xA;cover pot&#xA;balance wooden spoon precariously on pot handle&#xA;wait 10 minutes&#xA;goto first step (or shut off burner when done)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Do not bump wooden spoon or it will fall.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Notice again how text always lines up on 4-space indents (including&#xA;that last line which continues item 3 above).&lt;/p&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s a link to &lt;a href=&#34;http://foo.bar&#34;&gt;a website&lt;/a&gt;, to a &lt;a href=&#34;local-doc.html&#34;&gt;local&#xA;doc&lt;/a&gt;, and to a &lt;a href=&#34;http://localhost:1313/post/2018/08/30/markdown-guide-modified/#an-h2-header&#34;&gt;section heading in the current&#xA;doc&lt;/a&gt;. Here&amp;rsquo;s a footnote &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Tables can look like this:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;&lt;thead&gt;&#xA;&lt;tr&gt;&#xA;&lt;th&gt;size&lt;/th&gt;&#xA;&lt;th&gt;material&lt;/th&gt;&#xA;&lt;th&gt;color&lt;/th&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/thead&gt;&#xA;&lt;tbody&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;9&lt;/td&gt;&#xA;&lt;td&gt;leather&lt;/td&gt;&#xA;&lt;td&gt;brown&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;10&lt;/td&gt;&#xA;&lt;td&gt;hemp canvas&lt;/td&gt;&#xA;&lt;td&gt;natural&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;11&lt;/td&gt;&#xA;&lt;td&gt;glass&lt;/td&gt;&#xA;&lt;td&gt;transparent&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;Table: Shoes, their sizes, and what they&amp;rsquo;re made of&lt;/p&gt;&#xA;&lt;p&gt;(The above is the caption for the table.)&lt;/p&gt;&#xA;&lt;p&gt;A horizontal rule follows.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s a definition list:&lt;/p&gt;&#xA;&lt;dl&gt;&#xA;&lt;dt&gt;apples&lt;/dt&gt;&#xA;&lt;dd&gt;Good for making applesauce.&lt;/dd&gt;&#xA;&lt;dt&gt;oranges&lt;/dt&gt;&#xA;&lt;dd&gt;Citrus!&lt;/dd&gt;&#xA;&lt;dt&gt;tomatoes&lt;/dt&gt;&#xA;&lt;dd&gt;There&amp;rsquo;s no &amp;ldquo;e&amp;rdquo; in tomatoe.&lt;/dd&gt;&#xA;&lt;/dl&gt;&#xA;&lt;p&gt;(Put a blank line between each term/definition pair to spread&#xA;things out more.)&lt;/p&gt;&#xA;&lt;p&gt;and images can be specified like so:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;example image&#34; src=&#34;http://localhost:1313/images/partywizard.gif&#34; title=&#34;An exemplary image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Inline math equations go in like so: \(\omega = d\phi / dt\).&#xA;Display math should get its own line and be put in in&#xA;double-dollarsigns:&lt;/p&gt;&#xA;&lt;p&gt;$$I = \int \rho R^{2} dV$$&lt;/p&gt;&#xA;&lt;p&gt;And note that you can backslash-escape any punctuation characters&#xA;which you wish to be displayed literally, ex.: `foo`, *bar*, etc.&lt;/p&gt;&#xA;&lt;h4 id=&#34;images-auto-center&#34;&gt;Images auto center:&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;Party&#34; src=&#34;http://emojis.slackmojis.com/emojis/images/1475875185/1223/party-dinosaur.gif?1475875185&#34;&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;&#xA;&lt;hr&gt;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:1&#34;&gt;&#xA;&lt;p&gt;Footnote text goes here.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;</description>
    </item>
    <item>
      <title>Hacker with Bullhorn</title>
      <link>http://localhost:1313/post/2012/04/23/hacker-with-horn/</link>
      <pubDate>Mon, 23 Apr 2012 00:00:00 +0000</pubDate><author>hey@luisangel.me (Luis Angel Ortega)</author>
      <guid>http://localhost:1313/post/2012/04/23/hacker-with-horn/</guid>
      <description>&lt;p&gt;Hacker with bullhorn: &amp;ldquo;Save your money! Accept one of our free tanks! It is invulnerable, and can drive across rocks and swamps at ninety miles an hour while getting a hundred miles to the gallon!&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Prospective station wagon buyer: &amp;ldquo;I know what you say is true&amp;hellip;but&amp;hellip;er&amp;hellip;I don&amp;rsquo;t know how to maintain a tank!&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Bullhorn: &amp;ldquo;You don&amp;rsquo;t know how to maintain a station wagon either!&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Buyer: &amp;ldquo;But this dealership has mechanics on staff. If something goes wrong with my station wagon, I can take a day off work, bring it here, and pay them to work on it while I sit in the waiting room for hours, listening to elevator music.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Bullhorn: &amp;ldquo;But if you accept one of our free tanks we will send volunteers to your house to fix it for free while you sleep!&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Buyer: &amp;ldquo;Stay away from my house, you freak!&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Bullhorn: &amp;ldquo;But&amp;hellip;&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Buyer: &amp;ldquo;Can&amp;rsquo;t you see that everyone is buying station wagons?&amp;rdquo;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Command Line Awesomeness</title>
      <link>http://localhost:1313/post/2012/03/12/command-line-awesomeness/</link>
      <pubDate>Mon, 12 Mar 2012 00:00:00 +0000</pubDate><author>hey@luisangel.me (Luis Angel Ortega)</author>
      <guid>http://localhost:1313/post/2012/03/12/command-line-awesomeness/</guid>
      <description>&lt;p&gt;This crud is called HTML (HyperText Markup Language) and it is basically a very simple programming language instructing your web browser how to draw a page on a screen. Anyone can learn HTML and many people do. The important thing is that no matter what splendid multimedia web pages they might represent, HTML files are just telegrams.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;When Ronald Reagan was a radio announcer, he used to call baseball games by reading the terse descriptions that trickled in over the telegraph wire and were printed out on a paper tape. He would sit there, all by himself in a padded room with a microphone, and the paper tape would eke out of the machine and crawl over the palm of his hand printed with cryptic abbreviations. If the count went to three and two, Reagan would describe the scene as he saw it in his mind&amp;rsquo;s eye: &amp;ldquo;The brawny left-hander steps out of the batter&amp;rsquo;s box to wipe the sweat from his brow. The umpire steps forward to sweep the dirt from home plate.&amp;rdquo; and so on. When the cryptogram on the paper tape announced a base hit, he would whack the edge of the table with a pencil, creating a little sound effect, and describe the arc of the ball as if he could actually see it. His listeners, many of whom presumably thought that Reagan was actually at the ballpark watching the game, would reconstruct the scene in their minds according to his descriptions.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;This is exactly how the World Wide Web works: the HTML files are the pithy description on the paper tape, and your Web browser is Ronald Reagan. The same is true of Graphical User Interfaces in general.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Juicy Code</title>
      <link>http://localhost:1313/post/2012/01/23/juicy-code/</link>
      <pubDate>Mon, 23 Jan 2012 00:00:00 +0000</pubDate><author>hey@luisangel.me (Luis Angel Ortega)</author>
      <guid>http://localhost:1313/post/2012/01/23/juicy-code/</guid>
      <description>&lt;p&gt;Check out this JUICY! code:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#8caaee&#34;&gt;with_value_from_database&lt;/span&gt;(value)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#99d1db&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;class&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;from_database(&lt;span style=&#34;color:#99d1db&#34;&gt;name&lt;/span&gt;, value, type)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#8caaee&#34;&gt;with_cast_value&lt;/span&gt;(value)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#99d1db&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;class&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;with_cast_value(&lt;span style=&#34;color:#99d1db&#34;&gt;name&lt;/span&gt;, value, type)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#8caaee&#34;&gt;with_type&lt;/span&gt;(type)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ca9ee6&#34;&gt;if&lt;/span&gt; changed_in_place?&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    with_value_from_user(value)&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;with_type(type)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ca9ee6&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#99d1db&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;class&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;.&lt;/span&gt;new(&lt;span style=&#34;color:#99d1db&#34;&gt;name&lt;/span&gt;, value_before_type_cast, type, original_attribute)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ca9ee6&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
